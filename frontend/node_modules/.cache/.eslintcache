[{"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\index.js":"1","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\App.js":"3","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Button.js":"5","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Messages.js":"6","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Message.js":"7","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Login.js":"8","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Register.js":"9","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\AddMessage.js":"10","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\MessageInfo.js":"11","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Comments.js":"12","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Comment.js":"13","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\AddComment.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":2963,"mtime":1621805617822,"results":"18","hashOfConfig":"16"},{"size":467,"mtime":1621017781924,"results":"19","hashOfConfig":"16"},{"size":192,"mtime":1621017798444,"results":"20","hashOfConfig":"16"},{"size":223,"mtime":1621017123085,"results":"21","hashOfConfig":"16"},{"size":858,"mtime":1621699518475,"results":"22","hashOfConfig":"16"},{"size":1407,"mtime":1621801049035,"results":"23","hashOfConfig":"16"},{"size":1567,"mtime":1620981491229,"results":"24","hashOfConfig":"16"},{"size":1092,"mtime":1620996871127,"results":"25","hashOfConfig":"16"},{"size":1626,"mtime":1621421337456,"results":"26","hashOfConfig":"16"},{"size":1065,"mtime":1621802114182,"results":"27","hashOfConfig":"16"},{"size":857,"mtime":1621802133653,"results":"28","hashOfConfig":"16"},{"size":1164,"mtime":1621804023303,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ua2wdy",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\index.js",[],["63","64"],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\App.js",["65","66"],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Button.js",[],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Messages.js",[],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Login.js",["67","68"],"import { useState } from 'react'\r\nimport Button from \"./Button\";\r\n\r\nfunction Login(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    async function Login(e) {\r\n        e.preventDefault();\r\n        const res = await fetch('http://localhost:3001/users/login', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n            })\r\n            \r\n        });\r\n        if (res.status == 401) {\r\n            alert(\"Napacno ime ali geslo!\");\r\n        }\r\n        localStorage.setItem(\"username\", username);\r\n        const data = await res.json();\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-group\" onSubmit={Login}>\r\n            <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Uporabnisko ime\" value={username} onChange={(e) => { setUsername(e.target.value) }} required=\"\"/>\r\n            <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Geslo\" value={password} onChange={(e) => { setPassword(e.target.value) }} required=\"\" />\r\n            <Button text=\"Prijavi\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Register.js",["69"],"import { useState } from 'react'\r\nimport Button from \"./Button\";\r\n\r\nfunction Register(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    async function Register(e) {\r\n        e.preventDefault();\r\n        const res = await fetch('http://localhost:3001/users', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                email: email,\r\n                password: password\r\n            })\r\n        });\r\n        const data = await res.json();\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n        setEmail('');\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-group\" onSubmit={Register}>\r\n            <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Uporabnisko ime\"\r\n                value={username} onChange={(e) => (setUsername(e.target.value))} required=\"\"/>\r\n            <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Geslo\"\r\n                value={password} onChange={(e) => (setPassword(e.target.value))} required=\"\"/>\r\n            <input type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"E-mail\"\r\n                value={email} onChange={(e) => (setEmail(e.target.value))} required=\"\"/>\r\n            <Button text=\"Registracija\" />\r\n        </form>\r\n    )\r\n}\r\nexport default Register;","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\AddMessage.js",["70"],"﻿import { useState } from 'react'\r\nimport Button from \"./Button\";\r\n\r\nfunction AddMessage(props) {\r\n    const [name, setName] = useState('');\r\n    const [file, setFile] = useState('');\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //Validacija podatkov\r\n        if (!name) {\r\n            alert(\"Vnesite ime!\");\r\n            return;\r\n        }\r\n        if (!file) {\r\n            alert(\"Izberi sliko!\");\r\n            return;\r\n        }\r\n\r\n        //Pokliči onAdd v App componentu\r\n        props.onAdd({ name, file });\r\n\r\n        //Počisti podatke v obrazcu\r\n        setName(\"\");\r\n        setFile(\"\");\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-group\" onSubmit={onSubmit}>\r\n            <input type=\"text\" className=\"form-control\" name=\"ime\" placeholder=\"Ime slike\" value={name} onChange={(e) => { setName(e.target.value) }} />\r\n            <label>Izberi sliko</label>\r\n            <input type=\"file\" id=\"file\" onChange={(e) => { setFile(e.target.files[0]) }} />\r\n            <Button text=\"Naloži\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddMessage;","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\MessageInfo.js",[],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Comments.js",["71","72","73"],"import { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Comment from \"./Comment\";\r\n\r\n\r\nfunction Comments(props) {\r\n    const [comment, setComment] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [idMessage, setIdMessage] = useState('');\r\n    const { id } = useParams();\r\n    async function Prikazi() {\r\n        const res = await fetch('http://localhost:3001/comments/' + id, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const data = await res.json();\r\n        setComment(data.comment);\r\n        setUsername(data.username);\r\n        setIdMessage(data.idMessage);\r\n    }\r\n    return (\r\n        <div onLoad={Prikazi}>\r\n            <div>\r\n                <h5>Komentarji:</h5>\r\n            </div>\r\n            <div>\r\n                {props.comments.map((comment) => (<Comment comment={comment} />))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Comments;","C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\Comment.js",[],"C:\\Users\\Luka\\Desktop\\vaja4\\frontend\\src\\components\\AddComment.js",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":15,"column":12,"nodeType":"81","messageId":"82","endLine":15,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":22,"column":24,"nodeType":"86","messageId":"87","endLine":22,"endColumn":26},{"ruleId":"79","severity":1,"message":"88","line":26,"column":15,"nodeType":"81","messageId":"82","endLine":26,"endColumn":19},{"ruleId":"79","severity":1,"message":"88","line":23,"column":15,"nodeType":"81","messageId":"82","endLine":23,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":1,"column":1,"nodeType":"91","messageId":"87","fix":"92"},{"ruleId":"79","severity":1,"message":"93","line":7,"column":12,"nodeType":"81","messageId":"82","endLine":7,"endColumn":19},{"ruleId":"79","severity":1,"message":"94","line":8,"column":12,"nodeType":"81","messageId":"82","endLine":8,"endColumn":20},{"ruleId":"79","severity":1,"message":"95","line":9,"column":12,"nodeType":"81","messageId":"82","endLine":9,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":1,"column":1,"nodeType":"91","messageId":"87","fix":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Comments' is defined but never used.","Identifier","unusedVar","'test' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"99","text":"100"},"'comment' is assigned a value but never used.","'username' is assigned a value but never used.","'idMessage' is assigned a value but never used.",{"range":"101","text":"100"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0]]